// Generated from src/wac/Wac.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class WacLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly MUL = 12;
	public static readonly DIV = 13;
	public static readonly ADD = 14;
	public static readonly SUB = 15;
	public static readonly INTEGER = 16;
	public static readonly FLOAT_LIT = 17;
	public static readonly INTERPRETED_STRING_LIT = 18;
	public static readonly BOOLEAN = 19;
	public static readonly WHITESPACE = 20;
	public static readonly IF = 21;
	public static readonly ELSE = 22;
	public static readonly THEN = 23;
	public static readonly INT_CAST = 24;
	public static readonly FLOAT_CAST = 25;
	public static readonly DELIMITER = 26;
	public static readonly KEY_PATH = 27;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "MUL", "DIV", "ADD", "SUB", "DECIMALS", "EXPONENT", "INTEGER", 
		"FLOAT_LIT", "OCTAL_DIGIT", "HEX_DIGIT", "ESCAPED_VALUE", "INTERPRETED_STRING_LIT", 
		"BOOLEAN", "WHITESPACE", "IF", "ELSE", "THEN", "INT_CAST", "FLOAT_CAST", 
		"DELIMITER", "LETTER", "SPECIAL_CHAR", "KEY_NAME", "KEY_PATH",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'('", "')'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", 
		"'and'", "'or'", "'!'", "'*'", "'/'", "'+'", "'-'", undefined, undefined, 
		undefined, undefined, undefined, "'if'", "'else'", "'then'", "'int'", 
		"'float'", "'.'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "MUL", "DIV", "ADD", 
		"SUB", "INTEGER", "FLOAT_LIT", "INTERPRETED_STRING_LIT", "BOOLEAN", "WHITESPACE", 
		"IF", "ELSE", "THEN", "INT_CAST", "FLOAT_CAST", "DELIMITER", "KEY_PATH",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(WacLexer._LITERAL_NAMES, WacLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return WacLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(WacLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Wac.g4"; }

	// @Override
	public get ruleNames(): string[] { return WacLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return WacLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return WacLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return WacLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1D\xFC\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03" +
		"\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03" +
		"\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03" +
		"\x11\x06\x11p\n\x11\r\x11\x0E\x11q\x03\x12\x03\x12\x05\x12v\n\x12\x03" +
		"\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x05\x14\x7F\n\x14" +
		"\x03\x14\x05\x14\x82\n\x14\x03\x14\x05\x14\x85\n\x14\x03\x14\x03\x14\x03" +
		"\x14\x05\x14\x8A\n\x14\x05\x14\x8C\n\x14\x03\x15\x03\x15\x03\x16\x03\x16" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x05\x17" +
		"\xAC\n\x17\x03\x18\x03\x18\x03\x18\x07\x18\xB1\n\x18\f\x18\x0E\x18\xB4" +
		"\v\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19" +
		"\x03\x19\x03\x19\x03\x19\x05\x19\xC1\n\x19\x03\x1A\x06\x1A\xC4\n\x1A\r" +
		"\x1A\x0E\x1A\xC5\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F" +
		"\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03#\x03#\x07#\xEB\n#\f#\x0E" +
		"#\xEE\v#\x03$\x03$\x03$\x03$\x06$\xF4\n$\r$\x0E$\xF5\x07$\xF8\n$\f$\x0E" +
		"$\xFB\v$\x02\x02\x02%\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v" +
		"\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19" +
		"\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x02#\x02\x02%\x02\x12" +
		"\'\x02\x13)\x02\x02+\x02\x02-\x02\x02/\x02\x141\x02\x153\x02\x165\x02" +
		"\x177\x02\x189\x02\x19;\x02\x1A=\x02\x1B?\x02\x1CA\x02\x02C\x02\x02E\x02" +
		"\x02G\x02\x1D\x03\x02\f\x03\x022;\x04\x02GGgg\x04\x02--//\x03\x0229\x05" +
		"\x022;CHch\v\x02$$))^^cdhhppttvvxx\x04\x02$$^^\x05\x02\v\f\x0F\x0F\"\"" +
		"\x04\x02C\\c|\x04\x02//aa\x02\u0108\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
		"\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
		"\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02" +
		"\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02" +
		"\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02" +
		"\x02\x02\x02\x1F\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02" +
		"5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02" +
		"\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02G\x03\x02\x02\x02" +
		"\x03I\x03\x02\x02\x02\x05K\x03\x02\x02\x02\x07M\x03\x02\x02\x02\tP\x03" +
		"\x02\x02\x02\vS\x03\x02\x02\x02\rU\x03\x02\x02\x02\x0FX\x03\x02\x02\x02" +
		"\x11Z\x03\x02\x02\x02\x13]\x03\x02\x02\x02\x15a\x03\x02\x02\x02\x17d\x03" +
		"\x02\x02\x02\x19f\x03\x02\x02\x02\x1Bh\x03\x02\x02\x02\x1Dj\x03\x02\x02" +
		"\x02\x1Fl\x03\x02\x02\x02!o\x03\x02\x02\x02#s\x03\x02\x02\x02%y\x03\x02" +
		"\x02\x02\'\x8B\x03\x02\x02\x02)\x8D\x03\x02\x02\x02+\x8F\x03\x02\x02\x02" +
		"-\x91\x03\x02\x02\x02/\xAD\x03\x02\x02\x021\xC0\x03\x02\x02\x023\xC3\x03" +
		"\x02\x02\x025\xC9\x03\x02\x02\x027\xCC\x03\x02\x02\x029\xD1\x03\x02\x02" +
		"\x02;\xD6\x03\x02\x02\x02=\xDA\x03\x02\x02\x02?\xE0\x03\x02\x02\x02A\xE2" +
		"\x03\x02\x02\x02C\xE4\x03\x02\x02\x02E\xE6\x03\x02\x02\x02G\xEF\x03\x02" +
		"\x02\x02IJ\x07*\x02\x02J\x04\x03\x02\x02\x02KL\x07+\x02\x02L\x06\x03\x02" +
		"\x02\x02MN\x07?\x02\x02NO\x07?\x02\x02O\b\x03\x02\x02\x02PQ\x07#\x02\x02" +
		"QR\x07?\x02\x02R\n\x03\x02\x02\x02ST\x07>\x02\x02T\f\x03\x02\x02\x02U" +
		"V\x07>\x02\x02VW\x07?\x02\x02W\x0E\x03\x02\x02\x02XY\x07@\x02\x02Y\x10" +
		"\x03\x02\x02\x02Z[\x07@\x02\x02[\\\x07?\x02\x02\\\x12\x03\x02\x02\x02" +
		"]^\x07c\x02\x02^_\x07p\x02\x02_`\x07f\x02\x02`\x14\x03\x02\x02\x02ab\x07" +
		"q\x02\x02bc\x07t\x02\x02c\x16\x03\x02\x02\x02de\x07#\x02\x02e\x18\x03" +
		"\x02\x02\x02fg\x07,\x02\x02g\x1A\x03\x02\x02\x02hi\x071\x02\x02i\x1C\x03" +
		"\x02\x02\x02jk\x07-\x02\x02k\x1E\x03\x02\x02\x02lm\x07/\x02\x02m \x03" +
		"\x02\x02\x02np\t\x02\x02\x02on\x03\x02\x02\x02pq\x03\x02\x02\x02qo\x03" +
		"\x02\x02\x02qr\x03\x02\x02\x02r\"\x03\x02\x02\x02su\t\x03\x02\x02tv\t" +
		"\x04\x02\x02ut\x03\x02\x02\x02uv\x03\x02\x02\x02vw\x03\x02\x02\x02wx\x05" +
		"!\x11\x02x$\x03\x02\x02\x02yz\x05!\x11\x02z&\x03\x02\x02\x02{\x84\x05" +
		"!\x11\x02|~\x070\x02\x02}\x7F\x05!\x11\x02~}\x03\x02\x02\x02~\x7F\x03" +
		"\x02\x02\x02\x7F\x81\x03\x02\x02\x02\x80\x82\x05#\x12\x02\x81\x80\x03" +
		"\x02\x02\x02\x81\x82\x03\x02\x02\x02\x82\x85\x03\x02\x02\x02\x83\x85\x05" +
		"#\x12\x02\x84|\x03\x02\x02\x02\x84\x83\x03\x02\x02\x02\x85\x8C\x03\x02" +
		"\x02\x02\x86\x87\x070\x02\x02\x87\x89\x05!\x11\x02\x88\x8A\x05#\x12\x02" +
		"\x89\x88\x03\x02\x02\x02\x89\x8A\x03\x02\x02\x02\x8A\x8C\x03\x02\x02\x02" +
		"\x8B{\x03\x02\x02\x02\x8B\x86\x03\x02\x02\x02\x8C(\x03\x02\x02\x02\x8D" +
		"\x8E\t\x05\x02\x02\x8E*\x03\x02\x02\x02\x8F\x90\t\x06\x02\x02\x90,\x03" +
		"\x02\x02\x02\x91\xAB\x07^\x02\x02\x92\x93\x07w\x02\x02\x93\x94\x05+\x16" +
		"\x02\x94\x95\x05+\x16\x02\x95\x96\x05+\x16\x02\x96\x97\x05+\x16\x02\x97" +
		"\xAC\x03\x02\x02\x02\x98\x99\x07W\x02\x02\x99\x9A\x05+\x16\x02\x9A\x9B" +
		"\x05+\x16\x02\x9B\x9C\x05+\x16\x02\x9C\x9D\x05+\x16\x02\x9D\x9E\x05+\x16" +
		"\x02\x9E\x9F\x05+\x16\x02\x9F\xA0\x05+\x16\x02\xA0\xA1\x05+\x16\x02\xA1" +
		"\xAC\x03\x02\x02\x02\xA2\xAC\t\x07\x02\x02\xA3\xA4\x05)\x15\x02\xA4\xA5" +
		"\x05)\x15\x02\xA5\xA6\x05)\x15\x02\xA6\xAC\x03\x02\x02\x02\xA7\xA8\x07" +
		"z\x02\x02\xA8\xA9\x05+\x16\x02\xA9\xAA\x05+\x16\x02\xAA\xAC\x03\x02\x02" +
		"\x02\xAB\x92\x03\x02\x02\x02\xAB\x98\x03\x02\x02\x02\xAB\xA2\x03\x02\x02" +
		"\x02\xAB\xA3\x03\x02\x02\x02\xAB\xA7\x03\x02\x02\x02\xAC.\x03\x02\x02" +
		"\x02\xAD\xB2\x07$\x02\x02\xAE\xB1\n\b\x02\x02\xAF\xB1\x05-\x17\x02\xB0" +
		"\xAE\x03\x02\x02\x02\xB0\xAF\x03\x02\x02\x02\xB1\xB4\x03\x02\x02\x02\xB2" +
		"\xB0\x03\x02\x02\x02\xB2\xB3\x03\x02\x02\x02\xB3\xB5\x03\x02\x02\x02\xB4" +
		"\xB2\x03\x02\x02\x02\xB5\xB6\x07$\x02\x02\xB60\x03\x02\x02\x02\xB7\xB8" +
		"\x07v\x02\x02\xB8\xB9\x07t\x02\x02\xB9\xBA\x07w\x02\x02\xBA\xC1\x07g\x02" +
		"\x02\xBB\xBC\x07h\x02\x02\xBC\xBD\x07c\x02\x02\xBD\xBE\x07n\x02\x02\xBE" +
		"\xBF\x07u\x02\x02\xBF\xC1\x07g\x02\x02\xC0\xB7\x03\x02\x02\x02\xC0\xBB" +
		"\x03\x02\x02\x02\xC12\x03\x02\x02\x02\xC2\xC4\t\t\x02\x02\xC3\xC2\x03" +
		"\x02\x02\x02\xC4\xC5\x03\x02\x02\x02\xC5\xC3\x03\x02\x02\x02\xC5\xC6\x03" +
		"\x02\x02\x02\xC6\xC7\x03\x02\x02\x02\xC7\xC8\b\x1A\x02\x02\xC84\x03\x02" +
		"\x02\x02\xC9\xCA\x07k\x02\x02\xCA\xCB\x07h\x02\x02\xCB6\x03\x02\x02\x02" +
		"\xCC\xCD\x07g\x02\x02\xCD\xCE\x07n\x02\x02\xCE\xCF\x07u\x02\x02\xCF\xD0" +
		"\x07g\x02\x02\xD08\x03\x02\x02\x02\xD1\xD2\x07v\x02\x02\xD2\xD3\x07j\x02" +
		"\x02\xD3\xD4\x07g\x02\x02\xD4\xD5\x07p\x02\x02\xD5:\x03\x02\x02\x02\xD6" +
		"\xD7\x07k\x02\x02\xD7\xD8\x07p\x02\x02\xD8\xD9\x07v\x02\x02\xD9<\x03\x02" +
		"\x02\x02\xDA\xDB\x07h\x02\x02\xDB\xDC\x07n\x02\x02\xDC\xDD\x07q\x02\x02" +
		"\xDD\xDE\x07c\x02\x02\xDE\xDF\x07v\x02\x02\xDF>\x03\x02\x02\x02\xE0\xE1" +
		"\x070\x02\x02\xE1@\x03\x02\x02\x02\xE2\xE3\t\n\x02\x02\xE3B\x03\x02\x02" +
		"\x02\xE4\xE5\t\v\x02\x02\xE5D\x03\x02\x02\x02\xE6\xEC\x05A!\x02\xE7\xEB" +
		"\x05A!\x02\xE8\xEB\x05%\x13\x02\xE9\xEB\x05C\"\x02\xEA\xE7\x03\x02\x02" +
		"\x02\xEA\xE8\x03\x02\x02\x02\xEA\xE9\x03\x02\x02\x02\xEB\xEE\x03\x02\x02" +
		"\x02\xEC\xEA\x03\x02\x02\x02\xEC\xED\x03\x02\x02\x02\xEDF\x03\x02\x02" +
		"\x02\xEE\xEC\x03\x02\x02\x02\xEF\xF9\x05E#\x02\xF0\xF3\x05? \x02\xF1\xF4" +
		"\x05E#\x02\xF2\xF4\x05%\x13\x02\xF3\xF1\x03\x02\x02\x02\xF3\xF2\x03\x02" +
		"\x02\x02\xF4\xF5\x03\x02\x02\x02\xF5\xF3\x03\x02\x02\x02\xF5\xF6\x03\x02" +
		"\x02\x02\xF6\xF8\x03\x02\x02\x02\xF7\xF0\x03\x02\x02\x02\xF8\xFB\x03\x02" +
		"\x02\x02\xF9\xF7\x03\x02\x02\x02\xF9\xFA\x03\x02\x02\x02\xFAH\x03\x02" +
		"\x02\x02\xFB\xF9\x03\x02\x02\x02\x14\x02qu~\x81\x84\x89\x8B\xAB\xB0\xB2" +
		"\xC0\xC5\xEA\xEC\xF3\xF5\xF9\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!WacLexer.__ATN) {
			WacLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(WacLexer._serializedATN));
		}

		return WacLexer.__ATN;
	}

}

